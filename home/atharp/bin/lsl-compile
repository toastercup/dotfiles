#!/bin/bash

set -euo pipefail

function show_help() {
    echo "lsl-compile usage"
    echo ""
    echo "    lsl-compile <env-file> <main-file>"
    echo ""
    exit 1
}

if [ "$#" -lt 2 ]; then
    echo "not enough arguments"
    show_help
fi

# Which preprocessor to use. Use 'gcpp' for GNU cpp (typical on Linux);
# use 'mcpp' for mcpp.
PREPROC_KIND=gcpp

# Full path to the preprocessor. Depends on where you have downloaded it.
# If the preprocessor is mcpp and it is in your path, you can leave it as-is.
PREPROC_PATH=cpp

declare -r ENV_FILE_REALPATH=$(realpath "$1")
declare -r MAIN_FILE_REALPATH=$(realpath "$2")

declare -r LSL_INPUT=$(cat <<EOF
#include "$ENV_FILE_REALPATH"
#include "$MAIN_FILE_REALPATH"
EOF
)

lsl-pyoptimizer -O addstrings,-extendedglobalexpr -p "$PREPROC_KIND" --precmd="$PREPROC_PATH" <(echo -e "$LSL_INPUT")
